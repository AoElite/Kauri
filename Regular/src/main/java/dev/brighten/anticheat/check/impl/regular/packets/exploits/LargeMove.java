package dev.brighten.anticheat.check.impl.regular.packets.exploits;

import cc.funkemunky.api.tinyprotocol.packet.in.WrappedInFlyingPacket;
import cc.funkemunky.api.utils.RunUtils;
import dev.brighten.anticheat.check.api.Check;
import dev.brighten.anticheat.check.api.CheckInfo;
import dev.brighten.anticheat.check.api.Packet;
import dev.brighten.anticheat.check.api.Setting;
import dev.brighten.api.check.CheckType;
import org.bukkit.util.Vector;

@CheckInfo(name = "LargeMove", description = "Checks if the player moves extremely far.", vlToFlag = 3,
        checkType = CheckType.EXPLOIT)
public class LargeMove extends Check {

    private Vector from;

    @Setting(name = "closeChannel")
    private static boolean closeChannel = true;

    @Setting(name = "bukkitKick.enabled")
    private static boolean bukkitKick = false;

    @Setting(name = "cancelPacket")
    private static boolean cancelPacket = true;

    @Setting(name = "bukkitKick.message")
    private static String bukkitKickMessage = "Illegal move";

    @Packet
    public boolean onPacket(WrappedInFlyingPacket packet, long timeStamp) {
        if(packet.isPos()) {
            Vector to = new Vector(packet.getX(), packet.getY(), packet.getZ());

            if(data.playerInfo.lastTeleportTimer.isPassed(4)
                    && data.playerInfo.checkMovement
                    && from != null) {
                double distance, deltaY = to.getY() - from.getY();

                double deltaXZ = to.clone().setY(0).distance(from.clone().setY(0));
                if(deltaY > -0.0981 && deltaY < -0.0979 && deltaXZ < 1) return false;
                distance = to.distance(from);
                if(Math.abs(to.getY()) > 1000) {
                    vl++;
                    flag("type=%s y=%s", 1, to.getY());

                    if(cancelPacket)
                        return true;
                    if(closeChannel)
                    closePlayerChannel();
                    else if(bukkitKick) RunUtils.task(() -> packet.getPlayer().kickPlayer(bukkitKickMessage));
                } else if(distance > 100) {
                    vl++;
                    flag("type=%s dist=%.2f", 2, distance);

                    if(cancelPacket)
                        return true;
                    if(closeChannel)
                        closePlayerChannel();
                    else if(bukkitKick) RunUtils.task(() -> packet.getPlayer().kickPlayer(bukkitKickMessage));
                }
            }

            from = to;
        }
        return false;
    }
}
